Lesson 10 - Password Reset

1 - Create a new resource called PasswordResets
	
	rails generate controller PasswordResets new edit --no-test-framework

2 - Add a new resource on Routes.rb

	resources :password_resets, only: [:new, :create, :edit, :update]

3 - Add a link to password reset on Login page - ./app/views/sessions/new.html.erb

	<%= link_to "(Forgot Password)", new_password_reset_path %>

4 - Create a new migration to add some columns on users model

	rails generate migration add_reset_to_users reset_digest:string reset_sent_at:datetime
	rake db:migrate

5 - Create the page to Forgot Password ./app/views/password_resets/new.html.erb

	<% provide(:title, 'Forgot Password') %>

	<h1>Forgot Password</h1>

	<div class="row">
		<div class="col-md-6 col-md-offset-3">

			<%= form_for(:password_reset, url: password_resets_path) do |f| %>

				<%= f.label :email %>
				<%= f.text_field :email, class: 'form-control' %>

				<%= f.submit "Submit", class: 'btn btn-primary' %>
			<% end %>
		</div>
	</div>

6 - Implement the Create action on password_resets_controller.rb

  def create
  	@user = User.find_by(email: params[:password_reset][:email].downcase)
  	if @user
  		@user.create_reset_digest
  		@user.send_password_reset_email
  		flash[:info] = "Email sent with password reset instructions"
  		redirect_to root_url
  	else
  		flash.now[:danger] = "Email address not found"
  		render 'new'
  	end
  end	

7 - Create 2 methods on User Model - create_reset_digest / send_password_reset_email

	Add on attr_accessor :reset_token

	# Sets the password reset attributes
	def create_reset_digest
		self.reset_token = User.new_token
		update_attribute(:reset_digest, User.digest(reset_token))
		update_attribute(:reset_sent_at, Time.zone.now)
	end

	# Sends password reset email
	def send_password_reset_email
		UserMailer.password_reset(self).deliver_now
	end

7.1 - Create the method send_password_reset_email on UserMailer - app/mailers/user_mailer.rb

	def password_reset(user)
		@user = user

		mail to: user.email, subject: "Password Reset"
	end	

7.2 - Define the template for password reset

7.3 - Define the preview for password reset email

  def password_reset
     user = User.first
     user.reset_token = User.new_token
    UserMailer.password_reset(user)
  end

7.4 - Create a integration test for password reset email on UserMailerTest

  test "password_reset" do
    user = users(:bruno)
    user.reset_token = User.new_token
    mail = UserMailer.password_reset(user)
    assert_equal "Password Reset", mail.subject
    assert_equal [user.email], mail.to
    assert_equal ["noreplay@example.com"], mail.from
    assert_match user.reset_token, mail.body.encoded
    assert_match CGI::escape(user.email), mail.body.encoded
  end	