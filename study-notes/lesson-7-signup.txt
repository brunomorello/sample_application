1 - Create a box for debug mode at development environment

	commandlines:
		
		git checkout -b sign-up	

	At application.html.erb insert this after, "render" of the layouts/footer

	<%= debug(params) if Rails.env.development? %>

	Edit the .scss from footer and add these lines:

	- at the begin of the file:

		/* mixins, variables, etc */

		@mixin box_sizing {
			-moz-box-sizing:    border-box;
			-webkit-box-sizing: border-box;
			box-sizing:         border-box;
		}		

	- and add the correspondent css for debug box(.debug_dump is the class created by ruby - see source code in browser):

		/* miscellaneous */

		.debug_dump {
			clear: both;
			float: left;
			width: 100%;
			margin-top: 45px;
			@include box_sizing;
		}	

2 - Make the Users Model works

	2.1 - Try to see a User at http://localhost:3000/users/1 
		Don't forget to create a User using rails console

	2.2 - Add the resource of Users model at routes.rb
		resources :users

	2.3 - Create the action to show users in control

		def show
		end

	2.4 - Create the view for show users

		show.html.erb

	###### IMPORTANT TIP: TO HELP YOU DEBUG, RAILS OFFER A FUNCTION CALLED debugger ######

	2.5 - Improve the show view, creating a helper

	UserHelper

	# Returns the Gravatar for the given user
	def gravatar_for(user)
		gravatar_id = Digest::MD5::hexdigest(user.email.downcase)
		gravatar_url = "https://secure.gravatar.com/#{gravatar_id}"
		image_tag(gravatar_url, alt: user.name, class: "gravatar")
	end	

3 - Building the Sign Up Form

	3.1 - Create the Indexes and another things using this migration
		rake db:migrate:reset

	3.2 - Edit the new.html.erb page from Users and add a form_for like this:

		<%= form_for(@user) do |f| %>

			<%= f.label :name %>
			<%= f.text_field :name %>

			<%= f.label :email %>
			<%= f.text_field :email %>

			<%= f.label :password %>
			<%= f.password_field :password %>

			<%= f.label :password_confirmation %>
			<%= f.password_field :password_confirmation %>

			<%= f.submit "Create my account", class: "btn btn-primary" %>

	3.3 - Edit the new action at users_controller.rb

		  def new
		  	@user = User.new
		  end		

4 - Handling Error with Unsuccessful Sign Up Users

	4.1 - Create the Action to Create a User

		  def create
		  	@user = User.new(user_params)
		  	if @user.save
		  		# Handle a successful save
		  	else
		  		render 'new'
		  	end
		  end

	4.2 - Create a Partial do handle Error (app/views/shared/_error_messages.html.rb)

		<% if @user.errors.any? %>
			<div id="error_explanation">
				<div class="alert alert-danger">
					The form contains <%= pluralize(@user.errors.count, "error") %>.
				</div>

				<ul>
					<% @user.errors.full_messages.each do |msg| %>
						<li><%= msg %></li>
					<% end %>
				</ul>
			</div>
		<% end %>		

	4.2 - Add the Partial in new.html.erb, after form_for @user

		<%= form_for(@user) do |f| %>

			<!-- ### ALWAYS PUT <%= TO RENDER WORKS!! -->
			<%= render 'shared/error_messages' %>	

	4.3 - Add these lines to customcss

		#error_explanation {
			color: red;
			ul {
				color: red;
				margin: 0 0 30px 0;
			}
		}

		.field_with_errors {
			@extend .has-error;
			.form-control {
				color: $state-danger-text;
			}
		}


	4.4 - Create a Integration Test

		rails generate integration_test users_signup

		  test "invalid signup information" do
		  	get signup_path

		  	assert_no_difference 'User.count' do
			  	post users_path, user: { name: "",
			  	                         email:"user@inavalid",
			  	                         password: "foo",
			  	                         password_confirmation: "foo"}
		  	end

		  	assert_template 'users/new'
		  end		

5 - Handle a Success Save

	5.1 - Edit the create action in Users Controller

	  	@user = User.new(user_params)
	  	if @user.save
	  		# Handle a successful save

	  		flash[:success] = "Welcome to the Sample App!"
	  		#redirect_to user_url(@user) - It Works too
	  		redirect_to @user
	  	else
	  		render 'new'
	  	end
	  end


	5.2 - Add the hash Flash in application.html.erb, after div="container"

      <% flash.each do |message_type, message| %>
        <div class="alert alert-<%= message_type %>"> <%= message %> </div>
      <% end %>

    5.3 - Create a Test for Successful Signup

	  test "valid signup information" do
	  	get signup_path

	  	assert_difference 'User.count', 1 do
		  	post_via_redirect users_path, user: { name: "Example User",
		  	                         email:"user@example.com",
		  	                         password: "password",
		  	                         password_confirmation: "password"}
	  	end

	  	assert_template 'users/show'
	  end    

